package Week7.Tasks;
import static Week7.Tasks.Postfix.parse;
/**
 * Створити застосування для обрахунку виразів що задано в формі польського інверсного запису.
 * Для переведення рядків в числа використовуйте класи обгортки.
 * У випадку коли:
 * При обрахунках виразу виникла помилка розбору виразу метод повинен “викинути” RPNParserException
 * public class RPNParserException extends RuntimeException{
 *
 *  }
 * У випадку ділення на нуль (коли результат виразу може стати NaN або Infinity) метод повинен викинути
 * ArithmeticException (стандартий клас виключення доступний в пакеті )
 * В виразі можуть зустрічатися виключно операції +, - , * та / (сума, мінус, множення та ділення).
 * Якщо в виразі буде присутній інший оператор Ви повинні викинути RPNParserException

 * Для даного завдання НЕ потрібно перетворювати звичайний запис в бездужковий.
 * На вході методу будуть присутні виключно вирази в польскому інверсному записі.
 * Приклади вхідних даних:
 * 10 20 + 30 40 + *
 * що буде аналогом виразу (10 + 20) * (30 + 40).
 * Результат обчислення: 2100
 * 10 20 30.0 * +
 * що буде аналогом виразу 10 + 20 * 30.0
 * Результат обчислення: 610
 * 10 20 30 () +
 * повинно викликати виключення RPNParserException
 * 10 20 Е * +
 * повинно викликати виключення RPNParserException
 * 0 0 /
 * повинно викликати виключення ArithmeticException
 */
public class Main{
    public static void main(String[] args) throws RPNParserException {
        args = new String[]{"10 10 + "};
        System.out.println(parse(args[0]));
    }

}
